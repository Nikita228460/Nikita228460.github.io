async function getUserInfo() {
  let userInfo = {
    ip: null,
    ipLocation: null,
    geoLocation: null,
    browserInfo: {
      userAgent: navigator.userAgent,
      platform: navigator.platform,
      language: navigator.language,
      online: navigator.onLine,
      screen: {
        width: screen.width,
        height: screen.height,
      },
    },
  };

  try {
    // –ü–æ–ª—É—á–∞–µ–º IP
    let ipResponse = await fetch('https://api.ipify.org?format=json');
    let ipData = await ipResponse.json();
    userInfo.ip = ipData.ip;

    // –ü–æ–ª—É—á–∞–µ–º –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –ø–æ IP
    let ipInfoResponse = await fetch(`http://ip-api.com/json/${userInfo.ip}`);
    let ipInfoData = await ipInfoResponse.json();
    userInfo.ipLocation = ipInfoData;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ IP/–≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏:', error);
  }

  // –ü–æ–ª—É—á–∞–µ–º –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä
  if ("geolocation" in navigator) {
    navigator.geolocation.getCurrentPosition(
      (position) => {
        userInfo.geoLocation = {
          latitude: position.coords.latitude,
          longitude: position.coords.longitude,
          accuracy: position.coords.accuracy,
        };
        printUserInfo(userInfo);
      },
      (error) => {
        console.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏:", error.message);
        printUserInfo(userInfo);
      }
    );
  } else {
    console.log("–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —ç—Ç–∏–º –±—Ä–∞—É–∑–µ—Ä–æ–º.");
    printUserInfo(userInfo);
  }
}

function printUserInfo(userInfo) {
  let output = `üñ•Ô∏è **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ**\n`;

  output += `\nüåê **IP-–∞–¥—Ä–µ—Å (ipify API)**\n`;
  output += `IP: ${userInfo.ip || "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å"}\n`;

  if (userInfo.ipLocation) {
    output += `\nüìç **–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –ø–æ IP (ip-api API)**\n`;
    output += `–°—Ç—Ä–∞–Ω–∞: ${userInfo.ipLocation.country || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}\n`;
    output += `–ì–æ—Ä–æ–¥: ${userInfo.ipLocation.city || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}\n`;
    output += `–ü—Ä–æ–≤–∞–π–¥–µ—Ä: ${userInfo.ipLocation.isp || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}\n`;
    output += `–®–∏—Ä–æ—Ç–∞: ${userInfo.ipLocation.lat || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}\n`;
    output += `–î–æ–ª–≥–æ—Ç–∞: ${userInfo.ipLocation.lon || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}\n`;
  } else {
    output += `\nüìç –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –ø–æ IP: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å\n`;
  }

  if (userInfo.geoLocation) {
    output += `\nüì° **–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –±—Ä–∞—É–∑–µ—Ä–∞ (navigator.geolocation)**\n`;
    output += `–®–∏—Ä–æ—Ç–∞: ${userInfo.geoLocation.latitude}\n`;
    output += `–î–æ–ª–≥–æ—Ç–∞: ${userInfo.geoLocation.longitude}\n`;
    output += `–¢–æ—á–Ω–æ—Å—Ç—å: ¬±${userInfo.geoLocation.accuracy} –º\n`;
  } else {
    output += `\nüì° –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –±—Ä–∞—É–∑–µ—Ä–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å\n`;
  }

  output += `\nüõ†Ô∏è **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—Ä–∞—É–∑–µ—Ä–µ**\n`;
  output += `User-Agent: ${userInfo.browserInfo.userAgent}\n`;
  output += `–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${userInfo.browserInfo.platform}\n`;
  output += `–Ø–∑—ã–∫: ${userInfo.browserInfo.language}\n`;
  output += `–û–Ω–ª–∞–π–Ω: ${userInfo.browserInfo.online ? "–î–∞" : "–ù–µ—Ç"}\n`;
  output += `–≠–∫—Ä–∞–Ω: ${userInfo.browserInfo.screen.width}x${userInfo.browserInfo.screen.height}\n`;

  console.log(output);
}

getUserInfo();
