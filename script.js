document.addEventListener('DOMContentLoaded', function() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–ª–∞–Ω—Å–∞
    let balance = localStorage.getItem('userBalance') || 0;
    document.getElementById('balance-value').textContent = balance;
    
    // –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = document.getElementById('modal');
    const closeModal = document.querySelector('.close-modal');
    
    function showModal(content) {
        document.getElementById('modal-body').innerHTML = content;
        modal.style.display = 'block';
        document.body.style.overflow = 'hidden';
    }
    
    function closeModalFunc() {
        modal.style.display = 'none';
        document.body.style.overflow = 'auto';
    }
    
    closeModal.addEventListener('click', closeModalFunc);
    window.addEventListener('click', function(event) {
        if (event.target === modal) {
            closeModalFunc();
        }
    });
    
    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
    document.querySelectorAll('.menu button').forEach(button => {
        button.addEventListener('click', () => {
            // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —É –≤—Å–µ—Ö
            document.querySelectorAll('.menu button').forEach(btn => btn.classList.remove('active'));
            // –í—ã–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é
            button.classList.add('active');
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —á—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å
            const page = button.getAttribute('data-page');
            renderPage(page);
        });
    });
    
    // –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü
    function renderPage(page) {
        const content = document.getElementById('content');
        
        if (page === 'cases') {
            const casesData = [
                { 
                    id: 'case1', 
                    name: '–ö–µ–π—Å "–û–≥–æ–Ω—å"', 
                    description: '–°–æ–¥–µ—Ä–∂–∏—Ç –∫—Ä—É—Ç—ã–µ –æ–≥–Ω–µ–Ω–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏!', 
                    price: 100,
                    items: ['üî• –û–≥–Ω–µ–Ω–Ω–∞—è –∞–≤–∞—Ç–∞—Ä–∫–∞', 'üéÆ –ò–≥—Ä–æ–≤–æ–π –∫–ª—é—á', 'üíé 50 –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤']
                },
                { 
                    id: 'case2', 
                    name: '–ö–µ–π—Å "–õ—ë–¥"', 
                    description: '–û—Ö–ª–∞–∂–¥–∞—é—â–∏–µ –∏ —Ä–µ–¥–∫–∏–µ –ø—Ä–∏–∑—ã.', 
                    price: 250,
                    items: ['‚ùÑÔ∏è –õ–µ–¥—è–Ω–æ–π —Å–∫–∏–Ω', 'üéÅ –°—é—Ä–ø—Ä–∏–∑-–±–æ–∫—Å', 'üíé 100 –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤']
                },
                { 
                    id: 'case3', 
                    name: '–ö–µ–π—Å "–ó–æ–ª–æ—Ç–æ"', 
                    description: '–ü—Ä–µ–º–∏—É–º –ø–æ–¥–∞—Ä–∫–∏ –∏ –±–æ–Ω—É—Å—ã.', 
                    price: 500,
                    items: ['üèÜ –ó–æ–ª–æ—Ç–æ–π —Å—Ç–∞—Ç—É—Å', 'üéÆ 2 –∏–≥—Ä–æ–≤—ã—Ö –∫–ª—é—á–∞', 'üíé 250 –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤']
                }
            ];
            
            // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–µ—Ä–≤—ã–π –∫–µ–π—Å –≤—ã–±—Ä–∞–Ω
            let selectedCaseId = casesData[0].id;
            
            content.innerHTML = `
            <div class="content-wrapper">
                <div class="cases-container">
                    <div class="cases-header">–í—ã–±–µ—Ä–∏—Ç–µ –∫–µ–π—Å</div>
                    <div class="cases-main">
                        <div class="case-image" id="caseImage">
                            <div class="case-glow"></div>
                            <img src="https://via.placeholder.com/150x150/ff9800/121212?text=${casesData.find(c => c.id === selectedCaseId).name.split(' ')[1].replace(/["‚Äù]/g, '')}" 
                                 alt="${casesData.find(c => c.id === selectedCaseId).name}">
                        </div>
                        <div class="case-description" id="caseDescription">${casesData.find(c => c.id === selectedCaseId).description}</div>
                        <div class="case-price">–¶–µ–Ω–∞: ${casesData.find(c => c.id === selectedCaseId).price} ‚≠êÔ∏è</div>
                        <button class="open-case-btn pulse-animation" id="openCaseBtn">–û—Ç–∫—Ä—ã—Ç—å –∫–µ–π—Å</button>
                    </div>
                    <div class="case-list" id="caseList">
                        ${casesData.map(c => `
                            <div class="case-item ${c.id === selectedCaseId ? 'active' : ''}" 
                                 data-id="${c.id}"
                                 data-price="${c.price}">
                                ${c.name}
                            </div>
                        `).join('')}
                    </div>
                </div>
            </div>
            `;
            
            const caseItems = document.querySelectorAll('.case-item');
            const caseDescription = document.getElementById('caseDescription');
            const caseImage = document.getElementById('caseImage').querySelector('img');
            const casePrice = document.querySelector('.case-price');
            const openCaseBtn = document.getElementById('openCaseBtn');
            
            caseItems.forEach(item => {
                item.addEventListener('click', () => {
                    selectedCaseId = item.getAttribute('data-id');
                    const selectedCase = casesData.find(c => c.id === selectedCaseId);
                    
                    caseDescription.textContent = selectedCase.description;
                    caseImage.src = `https://via.placeholder.com/150x150/ff9800/121212?text=${selectedCase.name.split(' ')[1].replace(/["‚Äù]/g, '')}`;
                    caseImage.alt = selectedCase.name;
                    casePrice.textContent = `–¶–µ–Ω–∞: ${selectedCase.price} ‚≠êÔ∏è`;
                    
                    caseItems.forEach(i => i.classList.remove('active'));
                    item.classList.add('active');
                });
            });
            
            openCaseBtn.addEventListener('click', () => {
                const selectedCase = casesData.find(c => c.id === selectedCaseId);
                const userBalance = parseInt(document.getElementById('balance-value').textContent);
                
                if (userBalance < selectedCase.price) {
                    showModal(`
                        <div class="modal-error">
                            <h3>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤</h3>
                            <p>–í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç ${selectedCase.price - userBalance} ‚≠êÔ∏è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —ç—Ç–æ–≥–æ –∫–µ–π—Å–∞.</p>
                            <button class="modal-btn" id="goToDeposit">–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å</button>
                        </div>
                    `);
                    
                    document.getElementById('goToDeposit').addEventListener('click', () => {
                        closeModalFunc();
                        document.querySelector('[data-page="deposit"]').click();
                    });
                    return;
                }
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
                const newBalance = userBalance - selectedCase.price;
                document.getElementById('balance-value').textContent = newBalance;
                localStorage.setItem('userBalance', newBalance);
                
                // –ê–Ω–∏–º–∞—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞
                openCaseBtn.disabled = true;
                openCaseBtn.textContent = '–û—Ç–∫—Ä—ã–≤–∞–µ–º...';
                openCaseBtn.classList.remove('pulse-animation');
                
                // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
                setTimeout(() => {
                    // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –ø—Ä–∏–∑
                    const randomItem = selectedCase.items[Math.floor(Math.random() * selectedCase.items.length)];
                    
                    showModal(`
                        <div class="modal-success">
                            <h3>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</h3>
                            <div class="prize-icon">üéâ</div>
                            <p>–í—ã –æ—Ç–∫—Ä—ã–ª–∏ ${selectedCase.name} –∏ –ø–æ–ª—É—á–∏–ª–∏:</p>
                            <div class="prize-name">${randomItem}</div>
                            <button class="modal-btn" onclick="closeModalFunc()">–û—Ç–ª–∏—á–Ω–æ!</button>
                        </div>
                    `);
                    
                    openCaseBtn.disabled = false;
                    openCaseBtn.textContent = '–û—Ç–∫—Ä—ã—Ç—å –∫–µ–π—Å';
                    openCaseBtn.classList.add('pulse-animation');
                }, 2000);
            });
        }
        else if (page === 'promo') {
            const activePromos = ['WELCOME2025'];
            const usedPromos = ['OLDPROMO'];
            
            content.innerHTML = `
            <div class="content-wrapper">
                <div class="promo-container">
                    <h2>–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞</h2>
                    <div class="promo-input-group">
                        <input type="text" id="promoInput" placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥">
                        <button id="activatePromoBtn">–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å</button>
                    </div>
                    <div class="promo-message" id="promoMessage"></div>
                    <div class="promo-list">
                        <h3>–í–∞—à–∏ –ø—Ä–æ–º–æ–∫–æ–¥—ã:</h3>
                        <div id="promoList">
                            ${activePromos.map(promo => `
                                <div class="promo-item" data-code="${promo}">
                                    ${promo} <span>–ê–∫—Ç–∏–≤–µ–Ω</span>
                                </div>
                            `).join('')}
                            ${usedPromos.map(promo => `
                                <div class="promo-item used" data-code="${promo}">
                                    ${promo} <span>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω</span>
                                </div>
                            `).join('')}
                        </div>
                    </div>
                </div>
            </div>
            `;
            
            const promoInput = document.getElementById('promoInput');
            const activateBtn = document.getElementById('activatePromoBtn');
            const promoMessage = document.getElementById('promoMessage');
            const promoList = document.getElementById('promoList');
            
            activateBtn.addEventListener('click', () => {
                const code = promoInput.value.trim().toUpperCase();
                
                if (!code) {
                    promoMessage.textContent = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥.';
                    promoMessage.style.color = 'var(--error)';
                    return;
                }
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–º–æ–∫–æ–¥—ã
                if (activePromos.includes(code) || usedPromos.includes(code)) {
                    promoMessage.textContent = '–≠—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥ —É–∂–µ –±—ã–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω.';
                    promoMessage.style.color = 'var(--error)';
                    return;
                }
                
                // –ü—Ä–∏–º–µ—Ä –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞
                if (code === 'LUCKYDAY') {
                    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã
                    activePromos.push(code);
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
                    const bonus = 100;
                    const currentBalance = parseInt(document.getElementById('balance-value').textContent);
                    const newBalance = currentBalance + bonus;
                    document.getElementById('balance-value').textContent = newBalance;
                    localStorage.setItem('userBalance', newBalance);
                    
                    promoMessage.textContent = `–ü—Ä–æ–º–æ–∫–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! +${bonus}‚≠êÔ∏è`;
                    promoMessage.style.color = 'var(--success)';
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ–∫–æ–¥ –≤ —Å–ø–∏—Å–æ–∫
                    const newPromo = document.createElement('div');
                    newPromo.className = 'promo-item';
                    newPromo.setAttribute('data-code', code);
                    newPromo.innerHTML = `${code} <span>–ê–∫—Ç–∏–≤–µ–Ω</span>`;
                    promoList.appendChild(newPromo);
                    
                    promoInput.value = '';
                    
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
                    promoMessage.classList.add('animate__animated', 'animate__tada');
                    setTimeout(() => {
                        promoMessage.classList.remove('animate__animated', 'animate__tada');
                    }, 1000);
                } 
                else if (code === 'BONUS50') {
                    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã
                    activePromos.push(code);
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
                    const bonus = 50;
                    const currentBalance = parseInt(document.getElementById('balance-value').textContent);
                    const newBalance = currentBalance + bonus;
                    document.getElementById('balance-value').textContent = newBalance;
                    localStorage.setItem('userBalance', newBalance);
                    
                    promoMessage.textContent = `–ü—Ä–æ–º–æ–∫–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! +${bonus}‚≠êÔ∏è`;
                    promoMessage.style.color = 'var(--success)';
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ–∫–æ–¥ –≤ —Å–ø–∏—Å–æ–∫
                    const newPromo = document.createElement('div');
                    newPromo.className = 'promo-item';
                    newPromo.setAttribute('data-code', code);
                    newPromo.innerHTML = `${code} <span>–ê–∫—Ç–∏–≤–µ–Ω</span>`;
                    promoList.appendChild(newPromo);
                    
                    promoInput.value = '';
                    
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
                    promoMessage.classList.add('animate__animated', 'animate__tada');
                    setTimeout(() => {
                        promoMessage.classList.remove('animate__animated', 'animate__tada');
                    }, 1000);
                }
                else {
                    promoMessage.textContent = '–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω.';
                    promoMessage.style.color = 'var(--error)';
                    
                    // –ê–Ω–∏–º–∞—Ü–∏—è –æ—à–∏–±–∫–∏
                    promoInput.classList.add('animate__animated', 'animate__shakeX');
                    setTimeout(() => {
                        promoInput.classList.remove('animate__animated', 'animate__shakeX');
                    }, 1000);
                }
            });
        } 
        else if (page === 'profile') {
            const userStats = {
                casesOpened: 23,
                wins: 8,
                level: 5
            };
            
            content.innerHTML = `
            <div class="content-wrapper">
                <div class="profile-container">
                    <div class="profile-avatar">U</div>
                    <div class="profile-username">User123</div>
                    <div class="profile-status">${userStats.level > 10 ? 'VIP –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}</div>
                    
                    <div class="profile-balance">
                        <span class="profile-balance-icon">‚≠êÔ∏è</span> 
                        <span id="profileBalance">${document.getElementById('balance-value').textContent}</span>
                    </div>
                    
                    <div class="profile-actions">
                        <button id="editProfileBtn">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                        <button id="logoutBtn">–í—ã–π—Ç–∏</button>
                    </div>
                    
                    <div class="profile-stats">
                        <div class="profile-stat-item">
                            <div class="profile-stat-number">${userStats.casesOpened}</div>
                            <div>–ö–µ–π—Å—ã</div>
                        </div>
                        <div class="profile-stat-item">
                            <div class="profile-stat-number">${userStats.wins}</div>
                            <div>–í—ã–∏–≥—Ä—ã—à–∏</div>
                        </div>
                        <div class="profile-stat-item">
                            <div class="profile-stat-number">${userStats.level}</div>
                            <div>–£—Ä–æ–≤–µ–Ω—å</div>
                        </div>
                    </div>
                    
                    <div class="profile-motto">–£–¥–∞—á–∞ ‚Äî —Ç–≤–æ–π –ª—É—á—à–∏–π –¥—Ä—É–≥!</div>
                </div>
            </div>
            `;
            
            document.getElementById('editProfileBtn').addEventListener('click', () => {
                showModal(`
                    <div class="modal-edit">
                        <h3>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è</h3>
                        <div class="form-group">
                            <label for="editUsername">–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</label>
                            <input type="text" id="editUsername" value="User123">
                        </div>
                        <div class="form-group">
                            <label for="editMotto">–î–µ–≤–∏–∑</label>
                            <input type="text" id="editMotto" value="–£–¥–∞—á–∞ ‚Äî —Ç–≤–æ–π –ª—É—á—à–∏–π –¥—Ä—É–≥!">
                        </div>
                        <div class="form-group">
                            <label for="editAvatar">–ê–≤–∞—Ç–∞—Ä (—ç–º–æ–¥–∑–∏)</label>
                            <input type="text" id="editAvatar" value="U" maxlength="2">
                        </div>
                        <button class="modal-btn" id="saveProfileBtn">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                    </div>
                `);
                
                document.getElementById('saveProfileBtn').addEventListener('click', () => {
                    const newUsername = document.getElementById('editUsername').value;
                    const newMotto = document.getElementById('editMotto').value;
                    const newAvatar = document.getElementById('editAvatar').value;
                    
                    if (newUsername && newAvatar) {
                        document.querySelector('.profile-username').textContent = newUsername;
                        document.querySelector('.profile-motto').textContent = newMotto;
                        document.querySelector('.profile-avatar').textContent = newAvatar;
                        closeModalFunc();
                    } else {
                        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
                    }
                });
            });
            
            document.getElementById('logoutBtn').addEventListener('click', () => {
                showModal(`
                    <div class="modal-confirm">
                        <h3>–í—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞</h3>
                        <p>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?</p>
                        <div class="modal-buttons">
                            <button class="modal-btn cancel-btn" onclick="closeModalFunc()">–û—Ç–º–µ–Ω–∞</button>
                            <button class="modal-btn confirm-btn" id="confirmLogout">–í—ã–π—Ç–∏</button>
                        </div>
                    </div>
                `);
                
                document.getElementById('confirmLogout').addEventListener('click', () => {
                    alert('–í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã (–∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã —Ä–µ–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –≤—ã—Ö–æ–¥–∞)');
                    closeModalFunc();
                });
            });
        }
        else if (page === 'deposit') {
            content.innerHTML = `
            <div class="content-wrapper">
                <div class="deposit-wrapper">
                    <div class="side-decor left-decor">üíé</div>
                    <div class="deposit-container">
                        <h2>üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</h2>
                        <p class="deposit-description">–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ç–æ–≤—É—é —Å—É–º–º—É –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é</p>
                        
                        <div class="deposit-buttons">
                            <button class="deposit-btn" data-amount="100">100 ‚≠êÔ∏è</button>
                            <button class="deposit-btn" data-amount="250">250 ‚≠êÔ∏è</button>
                            <button class="deposit-btn" data-amount="500">500 ‚≠êÔ∏è</button>
                            <button class="deposit-btn" data-amount="1000">1000 ‚≠êÔ∏è</button>
                            <button class="deposit-btn" data-amount="5000">5000 ‚≠êÔ∏è</button>
                            <button class="deposit-btn special" data-amount="9999">MAX ‚≠êÔ∏è</button>
                        </div>
                        
                        <div class="custom-deposit">
                            <input type="number" id="custom-amount" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é —Å—É–º–º—É" min="10" max="10000">
                            <button id="custom-deposit-btn">–ü–æ–ø–æ–ª–Ω–∏—Ç—å</button>
                        </div>
                        
                        <div class="deposit-footer">
                            <p>‚ö° –°—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞—á–∏—Å–ª—è—é—Ç—Å—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ</p>
                            <p>‚ùó –ï—Å–ª–∏ –≤ —Ç–µ—á–µ–Ω–∏–∏ 5 –º–∏–Ω—É—Ç —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª–∏ –Ω–∞ —Å—á–µ—Ç, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É</p>
                        </div>
                    </div>
                    <div class="side-decor right-decor">üíé</div>
                </div>
            </div>
            `;
            
            let selectedAmount = 0;
            
            // –ü—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å—É–º–º—ã ‚Äî –≤—Å—Ç–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ input
            document.querySelectorAll('.deposit-btn').forEach(btn => {
                btn.addEventListener('click', () => {
                    selectedAmount = parseInt(btn.getAttribute('data-amount'));
                    document.getElementById('custom-amount').value = selectedAmount;
                    
                    // –ê–Ω–∏–º–∞—Ü–∏—è –≤—ã–±–æ—Ä–∞
                    btn.classList.add('animate__animated', 'animate__pulse');
                    setTimeout(() => {
                        btn.classList.remove('animate__animated', 'animate__pulse');
                    }, 1000);
                });
            });
            
            // –ö–Ω–æ–ø–∫–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è ‚Äî –æ–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
            document.getElementById('custom-deposit-btn').addEventListener('click', () => {
                let current = parseInt(document.getElementById('balance-value').textContent) || 0;
                let add = parseInt(document.getElementById('custom-amount').value);
                
                if (isNaN(add) || add <= 0) {
                    showModal(`
                        <div class="modal-error">
                            <h3>–û—à–∏–±–∫–∞</h3>
                            <p>–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É (–æ—Ç 10 –¥–æ 10000 ‚≠êÔ∏è)</p>
                            <button class="modal-btn" onclick="closeModalFunc()">–ü–æ–Ω—è—Ç–Ω–æ</button>
                        </div>
                    `);
                    return;
                }
                
                if (add > 10000) {
                    showModal(`
                        <div class="modal-error">
                            <h3>–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç</h3>
                            <p>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞ —Ä–∞–∑ - 10000 ‚≠êÔ∏è</p>
                            <button class="modal-btn" onclick="closeModalFunc()">–ü–æ–Ω—è—Ç–Ω–æ</button>
                        </div>
                    `);
                    return;
                }
                
                const newBalance = current + add;
                document.getElementById('balance-value').textContent = newBalance;
                localStorage.setItem('userBalance', newBalance);
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –≤ –ø—Ä–æ—Ñ–∏–ª–µ, –µ—Å–ª–∏ –æ–Ω –æ—Ç–∫—Ä—ã—Ç
                const profileBalance = document.getElementById('profileBalance');
                if (profileBalance) {
                    profileBalance.textContent = newBalance;
                }
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                showModal(`
                    <div class="modal-success">
                        <h3>–£—Å–ø–µ—à–Ω–æ!</h3>
                        <div class="prize-icon">üí∞</div>
                        <p>–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ ${add} ‚≠êÔ∏è</p>
                        <p>–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${newBalance} ‚≠êÔ∏è</p>
                        <button class="modal-btn" onclick="closeModalFunc()">–û—Ç–ª–∏—á–Ω–æ!</button>
                    </div>
                `);
                
                document.getElementById('custom-amount').value = "";
            });
        }
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    renderPage('cases');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    function updateBalance() {
        const savedBalance = localStorage.getItem('userBalance');
        if (savedBalance) {
            document.getElementById('balance-value').textContent = savedBalance;
        }
    }
    
    updateBalance();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∫–µ–π—Å—ã
    document.addEventListener('mouseover', function(e) {
        if (e.target.classList.contains('case-item')) {
            e.target.classList.add('animate__animated', 'animate__pulse');
            setTimeout(() => {
                e.target.classList.remove('animate__animated', 'animate__pulse');
            }, 1000);
        }
    });
});

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
window.closeModalFunc = function() {
    document.getElementById('modal').style.display = 'none';
    document.body.style.overflow = 'auto';
};